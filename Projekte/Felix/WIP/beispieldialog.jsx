// @includepath "~/Documents/;%USERPROFILE%Documents";// @include "basiljs/basil.js";function draw() {var a_dialog = app.dialogs.add({name:"Welche Formen willst du?"});var min_width_left = 160;var min_width_right = 250;with (a_dialog) {	with (dialogColumns.add()) {		with (borderPanels.add()) {			with (dialogColumns.add()) {				staticTexts.add( {staticLabel: "Wähle zwischen folgenden Formen:", minWidth: min_width_left} );			}			with (dialogColumns.add()) {				var the_cb1 = checkboxControls.add({staticLabel: "gehakt", checkedState: false, minWidth: min_width_right});				var the_cb2 = checkboxControls.add({staticLabel: "nicht gehakt", checkedState: false, minWidth: min_width_right});			}		}    with (borderPanels.add()) {      with (dialogColumns.add()) {        staticTexts.add( {staticLabel: "Wähle zwischen folgenden Formen:", minWidth: min_width_left} );      }      with (dialogColumns.add()) {      }    }// Diesen Slider würde ich gerne mit in das Menü einbauen, dieses funktioniert aber leider mit einem anderen Aufbau ...var w = new Window ('dialog');// Dies ist der am Anfang angezeigte Wertvar value = w.add ('edittext {text: 50, characters: 3, justify: "center", active: false}');// Die Werte des Slidervar slider = w.add ('slider {minvalue: 0, maxvalue: 100, value: 50}');slider.onChanging = function () {value.text = slider.value - 0}value.onChanging = function () {slider.value = Number (value.text) + 100}w.add ('button', undefined, 'Ok', {name: 'ok'});w.show();		with (borderPanels.add()) {			with (dialogColumns.add()) {				staticTexts.add( {staticLabel: "Ein paar Radiobuttons:", minWidth: min_width_left} );			}			with (dialogColumns.add()) {				var the_rbs = radiobuttonGroups.add();				with(the_rbs) {					radiobuttonControls.add({staticLabel: "erste Wahl", checkedState: true, minWidth: min_width_right});					radiobuttonControls.add({staticLabel: "zweite Wahl", checkedState: false, minWidth: min_width_right});					radiobuttonControls.add({staticLabel: "dritte Wahl", checkedState: false, minWidth: min_width_right});				}			}		}		var enabled_group = enablingGroups.add({staticLabel: "Textfelder", checkedState: true});		with (enabled_group) {			with (dialogColumns.add() ) {				staticTexts.add( {staticLabel: "Einfacher Text:", minWidth: min_width_left} );				staticTexts.add( {staticLabel: "Reelle Zahl:", minWidth: min_width_left} );				staticTexts.add( {staticLabel: "Ganze Zahl:", minWidth: min_width_left} );				staticTexts.add( {staticLabel: "Maßeinheit:", minWidth: min_width_left} );				staticTexts.add( {staticLabel: "Prozent:", minWidth: min_width_left} );				staticTexts.add( {staticLabel: "Winkel:", minWidth: min_width_left} );			}			with (dialogColumns.add() ) {				var text_edit_box = textEditboxes.add({editContents: "irgendwas", minWidth: min_width_right});				var real_edit_box = realEditboxes.add({editValue: 3.1415, largeNudge: 3.1415, 							smallNudge: 0.31415, minimumValue: 0, 							maximumValue: 31.415, minWidth: min_width_right});				var int_edit_box = integerEditboxes.add({editValue: 5, largeNudge: 50, 							smallNudge: 5, minimumValue: 0, 							maximumValue: 155, minWidth: min_width_right});				var measure_edit_box = measurementEditboxes.add({editValue: (2.83465 * 5), 							editUnits: MeasurementUnits.MILLIMETERS,							largeNudge: 10, 							smallNudge: 1, minimumValue: 0, 							maximumValue: (2.83465 * 297), minWidth: min_width_right});				var percent_edit_box = percentEditboxes.add({editValue: 50, largeNudge: 10, 							smallNudge: 1, minimumValue: 0, 							maximumValue: 100, minWidth: min_width_right});				var angle_edit_box = angleEditboxes.add({editValue: 45, largeNudge: 15, 							smallNudge: 1, minimumValue: 0, 							maximumValue: 360, minWidth: min_width_right});							}		}		var dropdown_choices = app.swatches.everyItem().name;		var combo_choices = ["1", "2","3","5","8", "13"];		var enabled_group2 = enablingGroups.add({staticLabel: "Dropdowns", checkedState: true});		with (enabled_group2) {			with (dialogColumns.add()) {				staticTexts.add( {staticLabel: "Dropdownmenü", minWidth: min_width_left} );				staticTexts.add({ staticLabel: "Integer Combobox"});			}			with (dialogColumns.add()) {				var the_dropdown = dropdowns.add({ stringList: dropdown_choices, selectedIndex: 2, minWidth: min_width_right});				var int_combo = integerComboboxes.add({stringList: combo_choices, editValue: 21});			}		}	}}if (a_dialog.show() == false) {	a_dialog.destroy();} else {	a_string = "Ausgewählt:\r";	a_string += "Checkbox1 ist " + (the_cb1.checkedState?"an":"aus") + "\r";	a_string += "Checkbox2 ist " + (the_cb2.checkedState?"an":"aus") + "\r";	a_string += "Radiobutton Nr." + (the_rbs.selectedButton + 1) + "\r";	a_string += "\r";	a_string += "Einfacher Text: " + text_edit_box.editContents + "\r";	a_string += "Reelle Zahl: " + real_edit_box.editValue + "\r";	a_string += "Ganze Zahl: " + int_edit_box.editValue + "\r";	a_string += "Maßeinheit: " + (measure_edit_box.editValue * 0.35278) + "\r";	a_string += "Prozentzahl: " + percent_edit_box.editValue + "\r";	a_string += "Winkel: " + angle_edit_box.editValue + "\r";	a_string += "\r";	a_string += "Dropdown Nr." + (the_dropdown.selectedIndex + 1) + ": " + dropdown_choices[the_dropdown.selectedIndex] + "\r";	a_string += "Ganze Zahl Combo: " + int_combo.editValue + "\r";	// alert(a_string);}if ( the_cb1.checkedState == true ) { alert ("Dies ist der Bestätigungsalarm") }  }b.go();